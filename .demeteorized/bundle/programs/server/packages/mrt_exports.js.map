{"version":3,"sources":["meteor://ðŸ’»app/packages/mrt_exports/packages/mrt_exports.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yF","file":"/packages/mrt_exports.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////\n//                                                                            //\n// packages/mrt:exports/exports.js                                            //\n//                                                                            //\n////////////////////////////////////////////////////////////////////////////////\n                                                                              //\n// Pass the global object by reference                                        // 1\n(function (global) {                                                          // 2\n  // Initialize an empty module object to be referenced                       // 3\n  module = {};                                                                // 4\n                                                                              // 5\n  // Set getters and setters for `module.exports` and the `exports` alias     // 6\n  var name = 'exports';                                                       // 7\n  if (typeof Object.getOwnPropertyDescriptor(module, name) === 'undefined') { // 8\n    // Extend the global namespace from the local object                      // 9\n    Object.defineProperty(module, name, {                                     // 10\n      // Set a setter to handle the object's properties                       // 11\n      set: function (props) {                                                 // 12\n        // Export each local variable to the `this` object.                   // 13\n        for (var prop in props) {                                             // 14\n          // Make sure we aren't inheriting any prototype properties          // 15\n          if (props.hasOwnProperty(prop)) {                                   // 16\n            global[prop] = props[prop];                                       // 17\n          }                                                                   // 18\n        }                                                                     // 19\n      },                                                                      // 20\n      get: function () {                                                      // 21\n        return global;                                                        // 22\n      }                                                                       // 23\n    });                                                                       // 24\n  }                                                                           // 25\n  // Set `exports` to the original value of `module.exports`                  // 26\n  exports = module.exports;                                                   // 27\n})((function () {                                                             // 28\n  // Pass top-level (global) object to the above function                     // 29\n  return (function() {                                                        // 30\n    return this;                                                              // 31\n  }).call(null); // Force `this` to be the top-level object.                  // 32\n})());                                                                        // 33\n                                                                              // 34\n////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}